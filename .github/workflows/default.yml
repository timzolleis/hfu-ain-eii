name: "Compile files + create version"

on:
  push:
    branches:
      - master

jobs:
  check-commit-message:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@master
        with:
          fetch-tags: true
          fetch-depth: 0
      - name: Check commit message
        outputs:
          alive: ${{ steps.check.outputs.run_workflow }}
        run: |
          commit_message="$(git log -1 --pretty=%B)"
          if [[ $commit_message == *"fix"* || $commit_message == *"feat"* ]]; then
          echo "::set-output name=run_workflow::true"
          else
          echo "::set-output name=run_workflow::false"
          fi


  compile-latex-files:
    if: ${{ needs.check-commit-message.outputs.run_workflow == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@master
        with:
          fetch-tags: true
          fetch-depth: 0
      - name: Install TeX distribution
        if: steps.check_commit_message.outputs.run_workflow == 'true'
        uses: teatimeguest/setup-texlive-action@v3
        with:
          packages: >-
            scheme-basic
            babel
            babel-german
            fontenc
            ucs
            graphicx
            hyperref
            etoolbox
      - name: Compile files
        if: steps.check_commit_message.outputs.run_workflow == 'true'
        run: |
          chmod +x ./compile-files.sh
          ./compile-files.sh .
      - name: Create artifacts
        if: steps.check_commit_message.outputs.run_workflow == 'true'
        uses: actions/upload-artifact@master
        with:
          name: documentation
          path: |
            ./dist
  

  create-version:
    if: ${{ needs.check-commit-message.outputs.run_workflow == 'true' }}
    needs: compile-latex-files
    runs-on: ubuntu-latest
    steps:
      - name: Setup NPM
        uses: actions/setup-node@master
        with:
          node-version: "18"
      - name: Install dependencies
        run: npm install -g semantic-release @semantic-release/gitlab @semantic-release/git
      - name: Checkout repository
        uses: actions/checkout@master
      - name: Download artifacts
        uses: actions/download-artifact@master
        with:
          name: documentation
          path: documentation
      - name: Create version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release